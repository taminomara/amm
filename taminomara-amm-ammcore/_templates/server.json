{".gitignore": "# Compiled Lua sources\nluac.out\n\n# luarocks build files\n*.src.rock\n*.zip\n*.tar.gz\n\n# Object files\n*.o\n*.os\n*.ko\n*.obj\n*.elf\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n*.def\n*.exp\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Lua rocks\n/luarocks\n/lua\n/lua_modules\n/.luarocks\n\n# AMM-specific files\n/.amm\n/build\n\n# FIN-specific files\nFINLuaDocumentation.lua\n", ".github/workflows/main.yml": "name: Build and publish an AMM package\non:\n  pull_request:\n    branches:\n      - main\n  push:\n    branches:\n      - main\n    tags:\n      - '*/v*'\njobs:\n  build:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - name: Checkout source\n        uses: actions/checkout@v4\n      - name: Test and build an AMM package\n        uses: taminomara/amm@main\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n", ".vscode/lua.code-snippets": "{\n\t\"AMM Class Create\": {\n\t\t\"prefix\": \"$class\",\n\t\t\"body\": [\n\t\t\t\"--- $0\",\n\t\t\t\"--- \",\n\t\t\t\"--- @class ${RELATIVE_FILEPATH/([\\\\/\\\\\\\\])|(^taminomara.amm.)|(.lua$)/${1:+.}/g}.${1:${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}}: ${3/^(.*)$/${1:class.Base}/}\",\n\t\t\t\"${2/^$/local /}${1} = class.create(\\\"${1}\\\"${3/^(.*)$/${1:+, }$1/})\",\n\t\t\t\"\",\n\t\t\t\"--- @generic T: ${RELATIVE_FILEPATH/([\\\\/\\\\\\\\])|(^taminomara.amm.)|(.lua$)/${1:+.}/g}.$1\",\n\t\t\t\"--- @param self T\",\n\t\t\t\"--- @return T\",\n\t\t\t\"function ${2:ns.}${1:${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}}:New()\",\n\t\t\t\"    self = ${3/^(.*)$/${1:class.Base}/}.New(self)\",\n\t\t\t\"\",\n\t\t\t\"    return self\",\n\t\t\t\"end\",\n\t\t]\n\t},\n\t\"AMM file\": {\n\t\t\"prefix\": \"$ns\",\n\t\t\"body\": [\n\t\t\t\"--- ${1:Documentation}\"\n\t\t\t\"local ns = {}\",\n\t\t\t\"\",\n\t\t\t\"return ns\",\n\t\t]\n\t}\n}\n", ".vscode/settings.json": "{\n  \"jira-plugin.workingProject\": \"\",\n  \"Lua.runtime.pathStrict\": true,\n  \"Lua.runtime.path\": [\"taminomara-amm-?.lua\", \"?.lua\"],\n  \"Lua.type.castNumberToInteger\": false,\n  \"Lua.type.checkTableShape\": true,\n  \"Lua.type.inferParamType\": true,\n  \"Lua.workspace.library\": [\"${workspaceFolder}/.amm/lib\"],\n  \"cSpell.words\": [\"ammcore\", \"ammtest\", \"ammlib\"],\n  \"Lua.completion.requireSeparator\": \".\",\n  \"Lua.workspace.preloadFileSize\": 1024,\n  \"Lua.runtime.version\": \"Lua 5.4\",\n  \"Lua.runtime.builtin\": {\n    \"os\": \"disable\",\n    \"io\": \"disable\",\n    \"bit\": \"disable\",\n    \"bit32\": \"disable\",\n    \"ffi\": \"disable\",\n    \"jit\": \"disable\",\n    \"jit.profile\": \"disable\",\n    \"jit.util\": \"disable\",\n    \"package\": \"disable\"\n  }\n}\n"}